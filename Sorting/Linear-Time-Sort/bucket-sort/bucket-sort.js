/* bucket sort assumes that the input is generated by a
 * random process that distributes elements uniformly and
 * independently over the interval [0, 1). */

var stdIn = require('../../../input'),
  LinkedList = require('../../../Linked-List/list-as-routine');
  BucketSort = {};

BucketSort.setup = async function setup() {
  this.input_arr = await stdIn.createInputArr();
}

BucketSort.bucketSort = async function bucketSort () {
  await this.setup();

  var buck_head_arr = Array.apply(null, new Array(10))
    .map(function (i) { return LinkedList.setup(i) });
  /* alternatively,
   * [...Array(10).keys()].map(function (i) { return null }) */

  for (let i = 0; i < this.input_arr.length; i++) {
    // first parameter is the element at index i in input_arr ( key for list ). 
    // second parameter is the head of bucket.
    LinkedList.prepend(this.input_arr[i], Math.floor(this.input_arr[i] * 10));      
  }
}  

BucketSort.bucketSort();
